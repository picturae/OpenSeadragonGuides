{"version":3,"sources":["webpack:///openseadragon-guides.js","webpack:///webpack/bootstrap dd698df65182d18fd9bd","webpack:///./src/globals.js","webpack:///./src/session.js","webpack:///./src/guide.js","webpack:///./src/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","$","OpenSeadragon","DIRECTION_HORIZONTAL","Symbol","DIRECTION_VERTICAL","addGuide","id","x","y","dir","rotation","direction","guidesList","getGuides","guide","find","push","saveData","deleteGuide","guides","filter","data","window","sessionStorage","getItem","STORAGE_ID","JSON","parse","arr","setItem","stringify","_globals","useStorage","default","_interopRequireDefault","obj","_classCallCheck","instance","Constructor","TypeError","createElem","elem","document","createElement","classList","add","Error","createLine","lineElem","Guide","undefined","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_session","_session2","_ref","clickHandler","_ref$direction","_ref$id","Date","now","plugin","_ref$rotation","viewer","this","point","viewport","getCenter","line","appendChild","overlay","Overlay","element","location","height","width","draw","saveInStorage","allowRotation","rotate","addHandlers","tracker","MouseTracker","clickTimeThreshold","clickDistThreshold","dragHandler","bind","dragEndHandler","dblClickHandler","remove","addHandler","event","delta","deltaPointsFromPixels","update","drawHTML","drawer","container","removeHandler","destroy","closePopup","deg","parseFloat","style","webkitTransform","transform","_guide","version","major","Viewer","options","guidesInstance","Guides","_this","extend","horizontalGuideButton","verticalGuideButton","prefixUrl","removeOnClose","useSessionStorage","navImages","guideHorizontal","REST","GROUP","HOVER","DOWN","guideVertical","prefix","useGroup","buttonGroup","buttons","anyButton","onFocus","onBlur","Button","getElement","tooltip","getString","srcRest","srcGroup","srcHover","srcDown","onRelease","createHorizontalGuide","createVerticalGuide","forEach","g","showPopup","popup","createRotationPopup","addControl","display","popupInput","querySelector","_this2","_this3","selectedGuide","_this4","position","bottom","left","form","background","padding","input","type","fontSize","rotateButton","innerHTML","addEventListener","closeButton","title","fontWeight"],"mappings":"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","file":"openseadragon-guides.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Not importing Openseadragon into the bundle, use global var instead\nvar $ = exports.$ = OpenSeadragon;\n\nvar DIRECTION_HORIZONTAL = exports.DIRECTION_HORIZONTAL = Symbol('horizontal');\nvar DIRECTION_VERTICAL = exports.DIRECTION_VERTICAL = Symbol('vertical');\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _globals = __webpack_require__(0);\n\nvar useStorage = false;\nvar STORAGE_ID = 'openseadragon-guides';\n\n// Add new guide to sessionStorage\nfunction addGuide(id, x, y, dir, rotation) {\n  var direction = dir === _globals.DIRECTION_HORIZONTAL ? 'horizontal' : 'vertical';\n  var guidesList = getGuides();\n  // Check if guide with this id already exists\n  var guide = guidesList.find(function (guide) {\n    return guide.id === id;\n  });\n\n  // If guide exists update, otherwise create new one\n  if (guide) {\n    guide.x = x;\n    guide.y = y;\n    guide.rotation = rotation;\n  } else {\n    guidesList.push({ id: id, x: x, y: y, direction: direction, rotation: rotation });\n  }\n\n  saveData(guidesList);\n}\n\n// Removes guide from sessionStorage\nfunction deleteGuide(id) {\n  var guides = getGuides();\n\n  saveData(guides.filter(function (guide) {\n    return guide.id !== id;\n  }));\n}\n\n// Gets array with guides from sessionStorage\nfunction getGuides() {\n  var data = window.sessionStorage.getItem(STORAGE_ID);\n\n  if (data) {\n    return JSON.parse(data);\n  }\n\n  return [];\n}\n\n// Saves array with guides to sessionStorage\nfunction saveData(arr) {\n  window.sessionStorage.setItem(STORAGE_ID, JSON.stringify(arr));\n}\n\nexports.default = {\n  addGuide: addGuide,\n  deleteGuide: deleteGuide,\n  getGuides: getGuides,\n  useStorage: useStorage\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Guide = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _globals = __webpack_require__(0);\n\nvar _session = __webpack_require__(1);\n\nvar _session2 = _interopRequireDefault(_session);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Guide = exports.Guide = function () {\n  function Guide(_ref) {\n    var clickHandler = _ref.clickHandler,\n        _ref$direction = _ref.direction,\n        direction = _ref$direction === undefined ? _globals.DIRECTION_HORIZONTAL : _ref$direction,\n        _ref$id = _ref.id,\n        id = _ref$id === undefined ? Date.now() : _ref$id,\n        plugin = _ref.plugin,\n        _ref$rotation = _ref.rotation,\n        rotation = _ref$rotation === undefined ? 0 : _ref$rotation,\n        viewer = _ref.viewer,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Guide);\n\n    this.viewer = viewer;\n    this.plugin = plugin;\n    this.direction = direction;\n    this.rotation = rotation;\n    this.id = id;\n\n    // Center guide by default\n    this.point = this.viewer.viewport.getCenter();\n    this.point.x = x ? x : this.point.x;\n    this.point.y = y ? y : this.point.y;\n\n    this.elem = createElem(this.direction, this.id);\n    this.line = createLine();\n    this.elem.appendChild(this.line);\n\n    if (direction === _globals.DIRECTION_VERTICAL) {\n      this.point.y = -10;\n      this.overlay = new _globals.$.Overlay({\n        element: this.elem,\n        location: this.point,\n        height: 20,\n        width: 0.0001\n      });\n    } else {\n      this.point.x = -10;\n      this.overlay = new _globals.$.Overlay({\n        element: this.elem,\n        location: this.point,\n        width: 20,\n        height: 0.0001\n      });\n    }\n\n    this.draw();\n\n    // Store guide in session\n    this.saveInStorage();\n\n    if (clickHandler && this.plugin.allowRotation) {\n      this.clickHandler = clickHandler;\n    }\n\n    if (this.plugin.allowRotation) {\n      this.rotate(this.rotation);\n    }\n\n    this.addHandlers();\n  }\n\n  _createClass(Guide, [{\n    key: 'addHandlers',\n    value: function addHandlers() {\n      // Listen for mouse events on the guide\n      this.tracker = new _globals.$.MouseTracker({\n        element: this.elem,\n        clickTimeThreshold: this.viewer.clickTimeThreshold,\n        clickDistThreshold: this.viewer.clickDistThreshold,\n        dragHandler: this.dragHandler.bind(this),\n        dragEndHandler: this.dragEndHandler.bind(this),\n        dblClickHandler: this.remove.bind(this)\n      });\n\n      if (this.clickHandler) {\n        this.tracker.clickHandler = this.clickHandler.bind(this);\n      }\n\n      // Redraw guide when viewer changes\n      this.viewer.addHandler('open', this.draw.bind(this));\n      this.viewer.addHandler('animation', this.draw.bind(this));\n      this.viewer.addHandler('resize', this.draw.bind(this));\n      this.viewer.addHandler('rotate', this.draw.bind(this));\n    }\n  }, {\n    key: 'dragHandler',\n    value: function dragHandler(event) {\n      var delta = this.viewer.viewport.deltaPointsFromPixels(event.delta, true);\n\n      switch (this.direction) {\n        case _globals.DIRECTION_HORIZONTAL:\n          this.point.y += delta.y;\n          break;\n        case _globals.DIRECTION_VERTICAL:\n          this.point.x += delta.x;\n          break;\n      }\n\n      // Add css class so we can change mouse cursor with css\n      this.elem.classList.add('osd-guide-drag');\n      this.draw();\n    }\n  }, {\n    key: 'dragEndHandler',\n    value: function dragEndHandler() {\n      this.elem.classList.remove('osd-guide-drag');\n      this.saveInStorage();\n    }\n\n    // Draws html element in the Openseadragon viewer\n\n  }, {\n    key: 'draw',\n    value: function draw() {\n      if (this.point) {\n        this.overlay.update(this.point);\n        this.overlay.drawHTML(this.viewer.drawer.container, this.viewer.viewport);\n      }\n\n      return this;\n    }\n\n    // Remove event handlers and delete guide\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.viewer.removeHandler('open', this.draw.bind(this));\n      this.viewer.removeHandler('animation', this.draw.bind(this));\n      this.viewer.removeHandler('resize', this.draw.bind(this));\n      this.viewer.removeHandler('rotate', this.draw.bind(this));\n\n      this.overlay.destroy();\n      this.point = null;\n\n      _session2.default.deleteGuide(this.id);\n\n      if (this.plugin.allowRotation) {\n        this.plugin.closePopup();\n      }\n\n      return this;\n    }\n\n    // Rotates guide by degrees (css transform)\n\n  }, {\n    key: 'rotate',\n    value: function rotate(deg) {\n      if (parseFloat(deg)) {\n        switch (this.direction) {\n          case _globals.DIRECTION_HORIZONTAL:\n            this.line.style.webkitTransform = 'rotateZ(' + deg + 'deg)';\n            this.line.style.transform = 'rotateZ(' + deg + 'deg)';\n            break;\n          case _globals.DIRECTION_VERTICAL:\n            this.line.style.webkitTransform = 'rotateZ(' + deg + 'deg)';\n            this.line.style.transform = 'rotateZ(' + deg + 'deg)';\n            break;\n        }\n        this.rotation = deg;\n      } else {\n        this.line.style.webkitTransform = '';\n        this.line.style.transform = '';\n        this.rotation = 0;\n      }\n      this.saveInStorage();\n    }\n\n    // Adds guide to sessionStorage when useStorage option is set\n\n  }, {\n    key: 'saveInStorage',\n    value: function saveInStorage() {\n      if (_session2.default.useStorage) {\n        _session2.default.addGuide(this.id, this.point.x, this.point.y, this.direction, this.rotation);\n      }\n    }\n  }]);\n\n  return Guide;\n}();\n\n// Creates DOM element representing the guide\n\n\nfunction createElem(direction, id) {\n  var elem = document.createElement('div');\n  elem.id = 'osd-guide-' + id;\n  elem.classList.add('osd-guide');\n\n  switch (direction) {\n    case _globals.DIRECTION_HORIZONTAL:\n      elem.classList.add('osd-guide-horizontal');\n      break;\n    case _globals.DIRECTION_VERTICAL:\n      elem.classList.add('osd-guide-vertical');\n      break;\n    default:\n      throw new Error('Invalid guide direction');\n  }\n\n  return elem;\n}\n\n// Creates DOM element which is used to visually (by css) show the guideline\nfunction createLine() {\n  var lineElem = document.createElement('div');\n  lineElem.classList.add('osd-guide-line');\n  return lineElem;\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _guide = __webpack_require__(2);\n\nvar _globals = __webpack_require__(0);\n\nvar _session = __webpack_require__(1);\n\nvar _session2 = _interopRequireDefault(_session);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (!_globals.$.version || _globals.$.version.major < 2) {\n  throw new Error('This version of OpenSeadragon Guides requires OpenSeadragon version 2.0.0+');\n}\n\n// Add new instance of Guides plugin to the viewers prototype\n_globals.$.Viewer.prototype.guides = function (options) {\n  if (!this.guidesInstance || options) {\n    options = options || {};\n    options.viewer = this;\n    this.guidesInstance = new _globals.$.Guides(options);\n  }\n\n  return this.guidesInstance;\n};\n\n_globals.$.Guides = function (options) {\n  var _this = this;\n\n  _globals.$.extend(true, this, {\n    // internal state properties\n    viewer: null,\n    guides: [],\n\n    // Default options\n    allowRotation: false,\n    horizontalGuideButton: null,\n    verticalGuideButton: null,\n    prefixUrl: null,\n    removeOnClose: false,\n    useSessionStorage: false,\n    navImages: {\n      guideHorizontal: {\n        REST: 'guidehorizontal_rest.png',\n        GROUP: 'guidehorizontal_grouphover.png',\n        HOVER: 'guidehorizontal_hover.png',\n        DOWN: 'guidehorizontal_pressed.png'\n      },\n      guideVertical: {\n        REST: 'guidevertical_rest.png',\n        GROUP: 'guidevertical_grouphover.png',\n        HOVER: 'guidevertical_hover.png',\n        DOWN: 'guidevertical_pressed.png'\n      }\n    }\n  }, options);\n\n  // Add plugin buttons to the viewer\n  _globals.$.extend(true, this.navImages, this.viewer.navImages);\n\n  // Openseadragon button behaviour, make sure the plugin's buttons act the\n  // same as the default buttons from the viewer\n  var prefix = this.prefixUrl || this.viewer.prefixUrl || '';\n  var useGroup = this.viewer.buttonGroup && this.viewer.buttonGroup.buttons;\n  var anyButton = useGroup ? this.viewer.buttons.buttons[0] : null;\n  var onFocus = anyButton ? anyButton.onFocus : null;\n  var onBlur = anyButton ? anyButton.onBlur : null;\n\n  this.horizontalGuideButton = new _globals.$.Button({\n    element: this.horizontalGuideButton ? _globals.$.getElement(this.horizontalGuideButton) : null,\n    clickTimeThreshold: this.viewer.clickTimeThreshold,\n    clickDistThreshold: this.viewer.clickDistThreshold,\n    tooltip: _globals.$.getString('Tooltips.HorizontalGuide') || 'Horizontal guide',\n    srcRest: prefix + this.navImages.guideHorizontal.REST,\n    srcGroup: prefix + this.navImages.guideHorizontal.GROUP,\n    srcHover: prefix + this.navImages.guideHorizontal.HOVER,\n    srcDown: prefix + this.navImages.guideHorizontal.DOWN,\n    onRelease: this.createHorizontalGuide.bind(this),\n    onFocus: onFocus,\n    onBlur: onBlur\n  });\n\n  this.verticalGuideButton = new _globals.$.Button({\n    element: this.verticalGuideButton ? _globals.$.getElement(this.verticalGuideButton) : null,\n    clickTimeThreshold: this.viewer.clickTimeThreshold,\n    clickDistThreshold: this.viewer.clickDistThreshold,\n    tooltip: _globals.$.getString('Tooltips.VerticalGuide') || 'vertical guide',\n    srcRest: prefix + this.navImages.guideVertical.REST,\n    srcGroup: prefix + this.navImages.guideVertical.GROUP,\n    srcHover: prefix + this.navImages.guideVertical.HOVER,\n    srcDown: prefix + this.navImages.guideVertical.DOWN,\n    onRelease: this.createVerticalGuide.bind(this),\n    onFocus: onFocus,\n    onBlur: onBlur\n  });\n\n  if (useGroup) {\n    this.viewer.buttonGroup.buttons.push(this.horizontalGuideButton);\n    this.viewer.buttonGroup.element.appendChild(this.horizontalGuideButton.element);\n    this.viewer.buttonGroup.buttons.push(this.verticalGuideButton);\n    this.viewer.buttonGroup.element.appendChild(this.verticalGuideButton.element);\n  }\n\n  // Store globally so it can be used in the Guide objects\n  _session2.default.useStorage = this.useSessionStorage;\n\n  // Check if any guides are stored in sessionStorage\n  if (_session2.default.useStorage) {\n    var guides = _session2.default.getGuides();\n\n    // Creates a new Guide instance for every item in sessionStorage\n    guides.forEach(function (guide) {\n      var g = new _guide.Guide({\n        viewer: _this.viewer,\n        direction: guide.direction === 'horizontal' ? _globals.DIRECTION_HORIZONTAL : _globals.DIRECTION_VERTICAL,\n        rotation: guide.rotation,\n        id: guide.id,\n        clickHandler: function clickHandler() {\n          return _this.showPopup(g);\n        },\n        plugin: _this,\n        x: guide.x,\n        y: guide.y\n      });\n\n      _this.guides.push(g);\n    });\n  }\n\n  // Remove guides when viewer closes\n  if (this.removeOnClose) {\n    this.viewer.addHandler('close', function () {\n      _this.guides.forEach(function (guide) {\n        return guide.remove();\n      });\n      _this.guides = [];\n    });\n  }\n\n  // A popup for user input is needed when rotation is allowed\n  if (this.allowRotation) {\n    this.popup = this.createRotationPopup();\n    this.viewer.addControl(this.popup, {});\n    this.popup.style.display = 'none';\n    this.popupInput = this.popup.querySelector('input');\n  }\n};\n\n// Add methods to the plugin's prototype\n_globals.$.extend(_globals.$.Guides.prototype, {\n  createHorizontalGuide: function createHorizontalGuide() {\n    var _this2 = this;\n\n    var guide = new _guide.Guide({\n      viewer: this.viewer,\n      plugin: this,\n      direction: _globals.DIRECTION_HORIZONTAL,\n      clickHandler: function clickHandler() {\n        return _this2.showPopup(guide);\n      }\n    });\n    this.guides.push(guide);\n  },\n  createVerticalGuide: function createVerticalGuide() {\n    var _this3 = this;\n\n    var guide = new _guide.Guide({\n      viewer: this.viewer,\n      plugin: this,\n      direction: _globals.DIRECTION_VERTICAL,\n      clickHandler: function clickHandler() {\n        return _this3.showPopup(guide);\n      }\n    });\n    this.guides.push(guide);\n  },\n  showPopup: function showPopup(guide) {\n    this.popup.style.display = 'block';\n    this.selectedGuide = guide;\n    this.popupInput.value = this.selectedGuide.rotation;\n  },\n  closePopup: function closePopup() {\n    this.popup.style.display = 'none';\n    this.popupInput.value = '';\n    this.selectedGuide = null;\n  },\n\n\n  // TODO: Refactor popup into new class\n  // Very basic popup containing an text input to set a guide's rotation\n  createRotationPopup: function createRotationPopup() {\n    var _this4 = this;\n\n    var popup = document.createElement('div');\n    popup.id = 'osd-guide-popup';\n    popup.classList.add('osd-guide-popup');\n    popup.style.position = 'absolute';\n    popup.style.bottom = '10px';\n    popup.style.left = '10px';\n\n    var form = document.createElement('form');\n    form.classList.add('osd-guide-popup-form');\n    form.style.display = 'block';\n    form.style.position = 'relative';\n    form.style.background = '#fff';\n    form.style.padding = '10px';\n\n    popup.appendChild(form);\n\n    var input = document.createElement('input');\n    input.type = 'text';\n    input.style.display = 'inline-block';\n    input.style.width = '50px';\n    input.style.fontSize = '14px';\n    form.appendChild(input);\n\n    var rotateButton = document.createElement('button');\n    rotateButton.type = 'submit';\n    rotateButton.innerHTML = _globals.$.getString('Tool.rotate') || 'rotate';\n    rotateButton.style.fontSize = '14px';\n    rotateButton.classList.add('osd-guide-rotate-button');\n\n    rotateButton.addEventListener('click', function () {\n      _this4.selectedGuide.rotate(input.value);\n      _this4.closePopup();\n    });\n\n    form.appendChild(rotateButton);\n\n    var closeButton = document.createElement('button');\n    closeButton.innerHTML = '&times;';\n    closeButton.title = _globals.$.getString('Tool.close') || 'close';\n    closeButton.style.fontWeight = 'bold';\n    closeButton.style.fontSize = '14px';\n    closeButton.classList.add('osd-guide-close');\n    closeButton.addEventListener('click', function () {\n      _this4.closePopup();\n    });\n    form.appendChild(closeButton);\n\n    return popup;\n  }\n});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// openseadragon-guides.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dd698df65182d18fd9bd","// Not importing Openseadragon into the bundle, use global var instead\nexport const $ = OpenSeadragon;\n\nexport const DIRECTION_HORIZONTAL = Symbol('horizontal');\nexport const DIRECTION_VERTICAL = Symbol('vertical');\n\n\n\n// WEBPACK FOOTER //\n// ./src/globals.js","import {DIRECTION_HORIZONTAL} from './globals';\n\nlet useStorage = false;\nconst STORAGE_ID = 'openseadragon-guides';\n\n// Add new guide to sessionStorage\nfunction addGuide(id, x, y, dir, rotation) {\n  const direction = dir === DIRECTION_HORIZONTAL ? 'horizontal' : 'vertical';\n  const guidesList = getGuides();\n  // Check if guide with this id already exists\n  const guide = guidesList.find(guide => guide.id === id);\n\n  // If guide exists update, otherwise create new one\n  if (guide) {\n    guide.x = x;\n    guide.y = y;\n    guide.rotation = rotation;\n  } else {\n    guidesList.push({id, x, y, direction, rotation});\n  }\n\n  saveData(guidesList);\n}\n\n// Removes guide from sessionStorage\nfunction deleteGuide(id) {\n  const guides = getGuides();\n\n  saveData(guides.filter(guide => guide.id !== id));\n}\n\n// Gets array with guides from sessionStorage\nfunction getGuides() {\n  const data = window.sessionStorage.getItem(STORAGE_ID);\n\n  if (data) {\n    return JSON.parse(data);\n  }\n\n  return [];\n}\n\n// Saves array with guides to sessionStorage\nfunction saveData(arr) {\n  window.sessionStorage.setItem(\n    STORAGE_ID,\n    JSON.stringify(arr)\n  );\n}\n\nexport default {\n  addGuide,\n  deleteGuide,\n  getGuides,\n  useStorage\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/session.js","import {$, DIRECTION_HORIZONTAL, DIRECTION_VERTICAL} from './globals';\nimport session from './session';\n\nexport class Guide {\n\n  constructor({\n    clickHandler,\n    direction = DIRECTION_HORIZONTAL,\n    id = Date.now(),\n    plugin,\n    rotation = 0,\n    viewer,\n    x,\n    y\n  }) {\n    this.viewer = viewer;\n    this.plugin = plugin;\n    this.direction = direction;\n    this.rotation = rotation;\n    this.id = id;\n\n    // Center guide by default\n    this.point = this.viewer.viewport.getCenter();\n    this.point.x = x ? x : this.point.x;\n    this.point.y = y ? y : this.point.y;\n\n    this.elem = createElem(this.direction, this.id);\n    this.line = createLine();\n    this.elem.appendChild(this.line);\n\n    if (direction === DIRECTION_VERTICAL) {\n      this.point.y = -10;\n      this.overlay = new $.Overlay({\n        element: this.elem,\n        location: this.point,\n        height: 20,\n        width: 0.0001\n      });\n    } else {\n      this.point.x = -10;\n      this.overlay = new $.Overlay({\n        element: this.elem,\n        location: this.point,\n        width: 20,\n        height: 0.0001\n      });\n    }\n\n    this.draw();\n\n    // Store guide in session\n    this.saveInStorage();\n\n    if(clickHandler && this.plugin.allowRotation) {\n      this.clickHandler = clickHandler;\n    }\n\n    if(this.plugin.allowRotation) {\n      this.rotate(this.rotation);\n    }\n\n    this.addHandlers();\n  }\n\n  addHandlers() {\n    // Listen for mouse events on the guide\n    this.tracker = new $.MouseTracker({\n      element: this.elem,\n      clickTimeThreshold: this.viewer.clickTimeThreshold,\n      clickDistThreshold: this.viewer.clickDistThreshold,\n      dragHandler: this.dragHandler.bind(this),\n      dragEndHandler: this.dragEndHandler.bind(this),\n      dblClickHandler: this.remove.bind(this)\n    });\n\n    if (this.clickHandler) {\n      this.tracker.clickHandler = this.clickHandler.bind(this);\n    }\n\n    // Redraw guide when viewer changes\n    this.viewer.addHandler('open', this.draw.bind(this));\n    this.viewer.addHandler('animation', this.draw.bind(this));\n    this.viewer.addHandler('resize', this.draw.bind(this));\n    this.viewer.addHandler('rotate', this.draw.bind(this));\n  }\n\n  dragHandler(event) {\n    const delta = this.viewer.viewport.deltaPointsFromPixels(event.delta, true);\n\n    switch (this.direction) {\n      case DIRECTION_HORIZONTAL:\n        this.point.y += delta.y;\n        break;\n      case DIRECTION_VERTICAL:\n        this.point.x += delta.x;\n        break;\n    }\n\n    // Add css class so we can change mouse cursor with css\n    this.elem.classList.add('osd-guide-drag');\n    this.draw();\n  }\n\n  dragEndHandler() {\n    this.elem.classList.remove('osd-guide-drag');\n    this.saveInStorage();\n  }\n\n  // Draws html element in the Openseadragon viewer\n  draw() {\n    if (this.point) {\n      this.overlay.update(this.point);\n      this.overlay.drawHTML(this.viewer.drawer.container, this.viewer.viewport);\n    }\n\n    return this;\n  }\n\n  // Remove event handlers and delete guide\n  remove() {\n    this.viewer.removeHandler('open', this.draw.bind(this));\n    this.viewer.removeHandler('animation', this.draw.bind(this));\n    this.viewer.removeHandler('resize', this.draw.bind(this));\n    this.viewer.removeHandler('rotate', this.draw.bind(this));\n\n    this.overlay.destroy();\n    this.point = null;\n\n    session.deleteGuide(this.id);\n\n    if (this.plugin.allowRotation) {\n      this.plugin.closePopup();\n    }\n\n    return this;\n  }\n\n  // Rotates guide by degrees (css transform)\n  rotate(deg) {\n    if (parseFloat(deg)) {\n      switch (this.direction) {\n        case DIRECTION_HORIZONTAL:\n          this.line.style.webkitTransform = `rotateZ(${deg}deg)`;\n          this.line.style.transform = `rotateZ(${deg}deg)`;\n          break;\n        case DIRECTION_VERTICAL:\n          this.line.style.webkitTransform = `rotateZ(${deg}deg)`;\n          this.line.style.transform = `rotateZ(${deg}deg)`;\n          break;\n      }\n      this.rotation = deg;\n    } else {\n      this.line.style.webkitTransform = '';\n      this.line.style.transform = '';\n      this.rotation = 0;\n    }\n    this.saveInStorage();\n  }\n\n  // Adds guide to sessionStorage when useStorage option is set\n  saveInStorage() {\n    if (session.useStorage) {\n      session.addGuide(\n        this.id,\n        this.point.x,\n        this.point.y,\n        this.direction,\n        this.rotation\n      );\n    }\n  }\n}\n\n// Creates DOM element representing the guide\nfunction createElem(direction, id) {\n  const elem = document.createElement('div');\n  elem.id = `osd-guide-${id}`;\n  elem.classList.add('osd-guide');\n\n  switch (direction) {\n    case DIRECTION_HORIZONTAL:\n      elem.classList.add('osd-guide-horizontal');\n      break;\n    case DIRECTION_VERTICAL:\n      elem.classList.add('osd-guide-vertical');\n      break;\n    default:\n      throw new Error('Invalid guide direction');\n  }\n\n  return elem;\n}\n\n// Creates DOM element which is used to visually (by css) show the guideline\nfunction createLine() {\n  const lineElem = document.createElement('div');\n  lineElem.classList.add('osd-guide-line');\n  return lineElem;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/guide.js","import {Guide} from './guide';\nimport {$, DIRECTION_HORIZONTAL, DIRECTION_VERTICAL} from './globals';\nimport session from './session';\n\nif (!$.version || $.version.major < 2) {\n  throw new Error(\n    'This version of OpenSeadragon Guides requires OpenSeadragon version 2.0.0+'\n  );\n}\n\n// Add new instance of Guides plugin to the viewers prototype\n$.Viewer.prototype.guides = function(options) {\n  if (!this.guidesInstance || options) {\n    options = options || {};\n    options.viewer = this;\n    this.guidesInstance = new $.Guides(options);\n  }\n\n  return this.guidesInstance;\n};\n\n$.Guides = function(options) {\n  $.extend(true, this, {\n    // internal state properties\n    viewer: null,\n    guides: [],\n\n    // Default options\n    allowRotation: false,\n    horizontalGuideButton: null,\n    verticalGuideButton: null,\n    prefixUrl: null,\n    removeOnClose: false,\n    useSessionStorage: false,\n    navImages: {\n      guideHorizontal: {\n        REST: 'guidehorizontal_rest.png',\n        GROUP: 'guidehorizontal_grouphover.png',\n        HOVER: 'guidehorizontal_hover.png',\n        DOWN: 'guidehorizontal_pressed.png'\n      },\n      guideVertical: {\n        REST: 'guidevertical_rest.png',\n        GROUP: 'guidevertical_grouphover.png',\n        HOVER: 'guidevertical_hover.png',\n        DOWN: 'guidevertical_pressed.png'\n      }\n    }\n  }, options);\n\n  // Add plugin buttons to the viewer\n  $.extend(true, this.navImages, this.viewer.navImages);\n\n  // Openseadragon button behaviour, make sure the plugin's buttons act the\n  // same as the default buttons from the viewer\n  const prefix = this.prefixUrl || this.viewer.prefixUrl || '';\n  const useGroup = this.viewer.buttonGroup && this.viewer.buttonGroup.buttons;\n  const anyButton = useGroup ? this.viewer.buttons.buttons[0] : null;\n  const onFocus = anyButton ? anyButton.onFocus : null;\n  const onBlur = anyButton ? anyButton.onBlur : null;\n\n  this.horizontalGuideButton = new $.Button({\n    element: this.horizontalGuideButton ? $.getElement(this.horizontalGuideButton) : null,\n    clickTimeThreshold: this.viewer.clickTimeThreshold,\n    clickDistThreshold: this.viewer.clickDistThreshold,\n    tooltip: $.getString('Tooltips.HorizontalGuide') || 'Horizontal guide',\n    srcRest: prefix + this.navImages.guideHorizontal.REST,\n    srcGroup: prefix + this.navImages.guideHorizontal.GROUP,\n    srcHover: prefix + this.navImages.guideHorizontal.HOVER,\n    srcDown: prefix + this.navImages.guideHorizontal.DOWN,\n    onRelease: this.createHorizontalGuide.bind(this),\n    onFocus,\n    onBlur\n  });\n\n  this.verticalGuideButton = new $.Button({\n    element: this.verticalGuideButton ? $.getElement(this.verticalGuideButton) : null,\n    clickTimeThreshold: this.viewer.clickTimeThreshold,\n    clickDistThreshold: this.viewer.clickDistThreshold,\n    tooltip: $.getString('Tooltips.VerticalGuide') || 'vertical guide',\n    srcRest: prefix + this.navImages.guideVertical.REST,\n    srcGroup: prefix + this.navImages.guideVertical.GROUP,\n    srcHover: prefix + this.navImages.guideVertical.HOVER,\n    srcDown: prefix + this.navImages.guideVertical.DOWN,\n    onRelease: this.createVerticalGuide.bind(this),\n    onFocus,\n    onBlur\n  });\n\n  if (useGroup) {\n    this.viewer.buttonGroup.buttons.push(this.horizontalGuideButton);\n    this.viewer.buttonGroup.element.appendChild(this.horizontalGuideButton.element);\n    this.viewer.buttonGroup.buttons.push(this.verticalGuideButton);\n    this.viewer.buttonGroup.element.appendChild(this.verticalGuideButton.element);\n  }\n\n  // Store globally so it can be used in the Guide objects\n  session.useStorage = this.useSessionStorage;\n\n  // Check if any guides are stored in sessionStorage\n  if (session.useStorage) {\n    const guides = session.getGuides();\n\n    // Creates a new Guide instance for every item in sessionStorage\n    guides.forEach(guide => {\n      const g = new Guide({\n        viewer: this.viewer,\n        direction: guide.direction === 'horizontal' ?\n          DIRECTION_HORIZONTAL :\n          DIRECTION_VERTICAL,\n        rotation: guide.rotation,\n        id: guide.id,\n        clickHandler: () => this.showPopup(g),\n        plugin: this,\n        x: guide.x,\n        y: guide.y\n      });\n\n      this.guides.push(g);\n    });\n  }\n\n  // Remove guides when viewer closes\n  if (this.removeOnClose) {\n    this.viewer.addHandler('close', () => {\n      this.guides.forEach(guide => guide.remove());\n      this.guides = [];\n    });\n  }\n\n  // A popup for user input is needed when rotation is allowed\n  if (this.allowRotation) {\n    this.popup = this.createRotationPopup();\n    this.viewer.addControl(this.popup, {});\n    this.popup.style.display = 'none';\n    this.popupInput = this.popup.querySelector('input');\n  }\n};\n\n// Add methods to the plugin's prototype\n$.extend($.Guides.prototype, {\n  createHorizontalGuide() {\n    const guide = new Guide({\n      viewer: this.viewer,\n      plugin: this,\n      direction: DIRECTION_HORIZONTAL,\n      clickHandler: () => this.showPopup(guide)\n    });\n    this.guides.push(guide);\n  },\n\n  createVerticalGuide() {\n    const guide = new Guide({\n      viewer: this.viewer,\n      plugin: this,\n      direction: DIRECTION_VERTICAL,\n      clickHandler: () => this.showPopup(guide)\n    });\n    this.guides.push(guide);\n  },\n\n  showPopup(guide) {\n    this.popup.style.display = 'block';\n    this.selectedGuide = guide;\n    this.popupInput.value = this.selectedGuide.rotation;\n  },\n\n  closePopup() {\n    this.popup.style.display = 'none';\n    this.popupInput.value = '';\n    this.selectedGuide = null;\n  },\n\n  // TODO: Refactor popup into new class\n  // Very basic popup containing an text input to set a guide's rotation\n  createRotationPopup() {\n    const popup = document.createElement('div');\n    popup.id = 'osd-guide-popup';\n    popup.classList.add('osd-guide-popup');\n    popup.style.position = 'absolute';\n    popup.style.bottom = '10px';\n    popup.style.left = '10px';\n\n    const form = document.createElement('form');\n    form.classList.add('osd-guide-popup-form');\n    form.style.display = 'block';\n    form.style.position = 'relative';\n    form.style.background = '#fff';\n    form.style.padding = '10px';\n\n    popup.appendChild(form);\n\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.style.display = 'inline-block';\n    input.style.width = '50px';\n    input.style.fontSize = '14px';\n    form.appendChild(input);\n\n    const rotateButton = document.createElement('button');\n    rotateButton.type = 'submit';\n    rotateButton.innerHTML = $.getString('Tool.rotate') || 'rotate';\n    rotateButton.style.fontSize = '14px';\n    rotateButton.classList.add('osd-guide-rotate-button');\n\n    rotateButton.addEventListener('click', () => {\n      this.selectedGuide.rotate(input.value);\n      this.closePopup();\n    });\n\n    form.appendChild(rotateButton);\n\n    const closeButton = document.createElement('button');\n    closeButton.innerHTML = '&times;';\n    closeButton.title = $.getString('Tool.close') || 'close';\n    closeButton.style.fontWeight = 'bold';\n    closeButton.style.fontSize = '14px';\n    closeButton.classList.add('osd-guide-close');\n    closeButton.addEventListener('click', () => {\n      this.closePopup();\n    });\n    form.appendChild(closeButton);\n\n    return popup;\n  }\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}